{"version":3,"sources":["components/ContactFilter/ContactFilter.module.scss","App.module.scss","components/Container/Container.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/Section/Section.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss"],"names":["module","exports","Container","children","className","s","container","defaultProps","protoTypes","PropTypes","node","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","form","preventDefault","type","onChange","input","placeholder","pattern","title","required","button","ContactItem","contact","renderId","itemList","contactName","contactNumber","href","contactDelete","onClick","id","ContactList","contacts","list","map","ContactFilter","label","Section","section","CONTACTS","App","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","filter","setFilter","duplicateName","findName","find","alert","shortid","generate","prev","titleContact","normalizedFilter","toLowerCase","includes","getFilterSearch","prevState","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,+B,mBCA/DD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,aAAe,4B,mBCA5DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,uLCItBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,KAGhCD,EAAUK,aAAe,CACvBJ,SAAU,IAGZD,EAAUM,WAAa,CACrBL,SAAUM,IAAUC,MAGPR,Q,gBCZA,SAASS,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SAElC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAGd,OAAQP,GACJ,IAAK,OACDC,EAAQM,GACR,MACJ,IAAK,SACDJ,EAAUI,GACV,MACJ,QACI,SAUNC,EAAY,WACdL,EAAU,IACVF,EAAQ,KAEZ,OACI,uBAAMX,UAAWC,IAAEkB,KAAMX,SAXR,SAAAO,GACjBA,EAAEK,iBACFZ,EAAS,CAAEE,OAAKE,WAChBM,KAQA,UACI,gCACI,uBACIG,KAAK,OACLX,KAAK,OACLO,MAAOP,EACPY,SAAUR,EACVd,UAAWC,IAAEsB,MACbC,YAAa,qBACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,MAGhB,gCACI,uBACIN,KAAK,MACLX,KAAK,SACLO,MAAOL,EACPU,SAAUR,EACVd,UAAWC,IAAEsB,MACbC,YAAa,iCACbC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,MAGhB,wBAAQ3B,UAAWC,IAAE2B,OAAQP,KAAK,SAAlC,4G,oBCpDGQ,EAXI,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,SACzB,OACI,qBAAI/B,UAAWC,IAAE+B,SAAjB,UACI,sBAAMhC,UAAWC,IAAEgC,YAAnB,SAAiCH,EAAQpB,OACzC,mBAAGV,UAAWC,IAAEiC,cAAeC,KAAI,cAASL,EAAQlB,QAApD,SAA+DkB,EAAQlB,SACvE,wBAAQZ,UAAWC,IAAEmC,cAAef,KAAK,SAASgB,QAAS,kBAAMN,EAASD,EAAQQ,KAAlF,4D,iBCsBGC,EAzBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUT,EAAe,EAAfA,SAC7B,OACI,oBAAI/B,UAAWC,IAAEwC,KAAjB,SACKD,EAASE,KAAI,SAAAZ,GAAO,OACjB,cAAC,EAAD,CACIA,QAASA,EACTC,SAAUA,GACLD,EAAQQ,U,iBCR3BK,EAAgB,SAAC,GAAyB,IAAvB1B,EAAsB,EAAtBA,MAAOK,EAAe,EAAfA,SAC5B,OACI,uBAAOtB,UAAWC,IAAE2C,MAApB,SACI,uBACIvB,KAAK,OACLX,KAAK,OACLO,MAAOA,EACPK,SAAUA,EACVtB,UAAWC,IAAEsB,MACbC,YAAa,wFACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAMxBgB,EAAcxC,aAAe,CAC3Bc,MAAO,IAQM0B,Q,iBC3BTE,EAAU,SAAC,GAAD,IAAG9C,EAAH,EAAGA,SAAH,OACd,qBAAKC,UAAWC,IAAE6C,QAAlB,SAA4B/C,KAG9B8C,EAAQ1C,aAAe,CACrBJ,SAAU,IAGZ8C,EAAQzC,WAAa,CACnBL,SAAUM,IAAUC,MAGPuC,Q,iBCHTE,EAAW,CACb,CAAET,GAAI,OAAQ5B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE0B,GAAI,OAAQ5B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAE0B,GAAI,OAAQ5B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE0B,GAAI,OAAQ5B,KAAM,iBAAkBE,OAAQ,cAInC,SAASoC,IAAO,IAAD,EAE1B,EAAgCvC,mBAAQ,UACpCwC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADH,QACmBN,GAD3D,mBAAOP,EAAP,KAAiBc,EAAjB,KAIAC,qBAAU,WACNH,aAAaI,QAAQ,WAAWP,KAAKQ,UAAUjB,MACjD,CAACA,IAEH,MAA4B/B,mBAAS,IAArC,mBAAOiD,EAAP,KAAeC,EAAf,KA0CA,OACI,cAAC,EAAD,UACI,eAAC,EAAD,WACI,oBAAI3D,UAAWC,IAAEyB,MAAjB,yGACA,cAACnB,EAAD,CAAaC,SA5CN,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAME,EAAc,EAAdA,OAClBgD,EAAgBlD,EAEhBmD,EAAWrB,EAASsB,MACtB,SAAAhC,GAAO,OAAIA,EAAQpB,OAASkD,KAG/B,GAAIC,EACAE,MAAM,GAAD,OAAIH,EAAJ,gCADT,CAMD,IAAM9B,EAAU,CACZQ,GAAI0B,IAAQC,WACZvD,OACAE,UAEJ0C,GAAY,SAACY,GAAD,4BAAcA,GAAd,CAAoBpC,WA2BxB,oBAAI9B,UAAWC,IAAEkE,aAAjB,8DACA,cAAC,EAAD,CAAelD,MAAOyC,EAAQpC,SAXrB,SAACP,GAClB4C,EACI5C,EAAEC,cAAcC,UAUZ,cAAC,EAAD,CAAauB,SApBH,WACtB,IAAM4B,EAAmBV,EAAOW,cAEhC,OAAO7B,EAASkB,QAAO,SAAC5B,GAAD,OACrBA,EAAQpB,KAAK2D,cAAcC,SAASF,MAgBHG,GAAmBxC,SA1BrC,SAACO,GACdgB,GAAY,SAAAkB,GAAS,OACjBA,EAAUd,QAAO,SAAA5B,GAAO,OAAIA,EAAQQ,KAAOA,gBCjDvDmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,MAEF4B,SAASC,cAAc,W,kBCTzBjF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,kBCA/FD,EAAOC,QAAU,CAAC,SAAW,8BAA8B,YAAc,iCAAiC,cAAgB,mCAAmC,cAAgB,sC","file":"static/js/main.6e7a392d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2XO6r\",\"input\":\"ContactFilter_input__8Aypf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2oBiX\",\"titleContact\":\"App_titleContact__1tdh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\",\"title\":\"Container_title__58Tg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\"};","\n\nimport PropTypes from 'prop-types';\nimport s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.protoTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from \"react\";\n\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.scss'\n\nexport default function ContactForm({ onSubmit }) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n\n        \n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ name,number });\n        resetForm();\n    }\n\n    const resetForm = () => {\n        setNumber('')\n        setName('')\n    }\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder={'Имя'}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                />\n            </label>\n            <label>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder={'Номер'}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <button className={s.button} type=\"submit\">Добавить контакт</button>\n        </form>\n    );\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\n","import s from './ContactItem.module.scss'\n\nconst ContactItem =({contact,renderId})=> {\n    return (\n        <li className={s.itemList}>\n            <span className={s.contactName}>{contact.name}</span>\n            <a className={s.contactNumber} href={`tel:${contact.number}`}>{contact.number}</a>\n            <button className={s.contactDelete} type=\"button\" onClick={() => renderId(contact.id)}>Удалить</button>\n        </li>\n    )\n}\n\n\nexport default ContactItem","import ContactItem from \"../ContactItem\";\nimport PropTypes from 'prop-types'\nimport s from './ContactList.module.scss'\n\nconst ContactList = ({ contacts, renderId }) => {\n    return (\n        <ul className={s.list}>\n            {contacts.map(contact => (\n                <ContactItem\n                    contact={contact}\n                    renderId={renderId}\n                    key={contact.id}\n                />\n            ))}\n       </ul>\n  )  \n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  renderId: PropTypes.func.isRequired,\n};\n\nexport default ContactList","import PropTypes from 'prop-types'\nimport s from './ContactFilter.module.scss'\n\nconst ContactFilter = ({ value, onChange }) => {\n    return (\n        <label className={s.label}>\n            <input\n                type=\"text\"\n                name=\"name\"\n                value={value}\n                onChange={onChange}\n                className={s.input}\n                placeholder={'Поиск контактов'}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n            />\n        </label>\n    )\n}\n\nContactFilter.defaultProps = {\n  value: '',\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nconst Section = ({ children }) => (\n  <div className={s.section}>{children}</div>\n);\n\nSection.defaultProps = {\n  children: [],\n};\n\nSection.protoTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;","import { useState,useEffect } from 'react'\nimport shortid from 'shortid'\nimport Container from './components/Container'\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport ContactFilter from './components/ContactFilter'\nimport Section from './components/Section'\nimport s from './App.module.scss'\n\n\n\n\nconst CONTACTS = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\n\nexport default function App() {\n    \n    const [contacts, setContacts] = useState(\n        JSON.parse(window.localStorage.getItem(\"contacts\")) ?? CONTACTS\n    );\n\n    useEffect(() => {\n        localStorage.setItem(\"contacts\",JSON.stringify(contacts))\n    },[contacts])\n\n    const [filter, setFilter] = useState('');\n\n    const formSubmit = ({ name, number, }) => {\n        const duplicateName = name\n\n        const findName = contacts.find(\n            contact => contact.name === duplicateName,\n         );\n        \n         if (findName) {\n             alert(`${duplicateName} is already on contacts`);\n            return;\n         }\n\n\n        const contact = {\n            id: shortid.generate(),\n            name,\n            number,\n        };\n        setContacts((prev) => [...prev, contact]);\n    };\n    \n    const renderId = (id) => {\n        setContacts(prevState => \n            prevState.filter(contact => contact.id !== id),\n        )\n    };\n\n  const getFilterSearch = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n    const changeFilter = (e) => {\n        setFilter(\n            e.currentTarget.value)\n    }\n\n    return (\n        <Container>\n            <Section>\n                <h1 className={s.title}>Телефонная книга</h1>\n                <ContactForm onSubmit={formSubmit} />\n                <h1 className={s.titleContact}>Контакты</h1>\n                <ContactFilter value={filter} onChange={changeFilter} />\n                <ContactList contacts={getFilterSearch()} renderId={renderId} />\n            </Section>\n        </Container>\n    );\n    };\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"input\":\"ContactForm_input__3emgF\",\"button\":\"ContactForm_button__1007G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactItem_itemList__2TKF7\",\"contactName\":\"ContactItem_contactName__ak6z3\",\"contactNumber\":\"ContactItem_contactNumber__4z14B\",\"contactDelete\":\"ContactItem_contactDelete__1eCr1\"};"],"sourceRoot":""}